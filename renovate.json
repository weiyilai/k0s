{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":configMigration",
    ":gitSignOff",
    ":automergeMinor"
  ],
  "gitAuthor": "Renovate Bot <renovate@whitesourcesoftware.com>",
  "labels": [
    "dependencies"
  ],
  "baseBranchPatterns": [
    "main",
    "/^release-1\\.3[0-3]$/"
  ],
  "prTitleStrict": true,
  "enabledManagers": [
    "gomod",
    "custom.regex"
  ],
  "postUpdateOptions": [
    "gomodTidy"
  ],
  "packageRules": [
    {
      "description": "Ignore all Go dependencies by default",
      "enabled": false,
      "matchManagers": [
        "gomod"
      ]
    },
    {
      "description": "Group all etcd updates (go.mod and Makefile) into a single PR",
      "matchManagers": [
        "gomod",
        "custom.regex"
      ],
      "enabled": true,
      "matchPackageNames": [
        "go.etcd.io/etcd/**/v3",
        "etcd-io/etcd"
      ],
      "groupName": "etcd dependencies",
      "groupSlug": "etcd-all"
    },
    {
      "description": "Only update the main branch by default",
      "enabled": false,
      "prTitleStrict": false,
      "matchBaseBranches": [
        "!main"
      ]
    },
    {
      "description": "Bump Envoy for release-1.33",
      "enabled": true,
      "matchBaseBranches": [
        "release-1.33"
      ],
      "matchDepNames": [
        "quay.io/k0sproject/envoy-distroless"
      ],
      "allowedVersions": "<=1.32"
    },
    {
      "description": "Bump Go for release-1.32",
      "enabled": true,
      "matchBaseBranches": [
        "release-1.32"
      ],
      "matchDepNames": [
        "go"
      ],
      "allowedVersions": "<=1.23"
    },
    {
      "description": "Bump Envoy for release-1.32",
      "enabled": true,
      "matchBaseBranches": [
        "release-1.32"
      ],
      "matchDepNames": [
        "quay.io/k0sproject/envoy-distroless"
      ],
      "allowedVersions": "<=1.31"
    }
  ],
  "customManagers": [
    {
      "customType": "regex",
      "description": "Update minimum Go version",
      "managerFilePatterns": [
        "**/go.mod"
      ],
      "matchStrings": [
        "^go (?<currentValue>\\d+\\.\\d+)\\.0\\b"
      ],
      "depNameTemplate": "go",
      "datasourceTemplate": "golang-version",
      "extractVersionTemplate": "^(?<version>\\d+\\.\\d+)",
      "versioningTemplate": "loose"
    },
    {
      "customType": "regex",
      "description": "Update Go toolchain version",
      "managerFilePatterns": [
        "**/*"
      ],
      "matchStrings": [
        "\\bgo_version = (?<currentValue>\\d+(\\.\\d+){2})",
        "\\bgolang/go/blob/go(?<currentValue>\\d+(\\.\\d+){2})"
      ],
      "depNameTemplate": "go",
      "datasourceTemplate": "golang-version",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "description": "Update container image tags in non-Dockerfiles",
      "managerFilePatterns": [
        "**/*.go",
        "**/*.md",
        "**/*.patch",
        "**/*.py",
        "**/*.sh",
        "**/*.tf",
        "**/*.tftpl",
        "**/*.txt",
        "**/*.yaml",
        "**/*.yml"
      ],
      "matchStrings": [
        "\\b(?<depName>(docker|quay)\\.io/[a-z0-9][a-z0-9._-]*/[a-z0-9][a-z0-9._-]*)(:|.*\n.*= \")v?(?<currentValue>[a-z0-9_][\\w.-]{0,127})"
      ],
      "datasourceTemplate": "docker",
      "extractVersionTemplate": "^v?(?<version>[\\w][\\w.-]{0,127})"
    },
    {
      "customType": "regex",
      "description": "Update etcd version in embedded-bins/Makefile.variables",
      "managerFilePatterns": [
        "embedded-bins/Makefile.variables"
      ],
      "matchStrings": [
        "etcd_version = (?<currentValue>\\d+(\\.\\d+){2})"
      ],
      "depNameTemplate": "etcd-io/etcd",
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "description": "Update kine versions across the codebase",
      "managerFilePatterns": [
        "/(^|/)[Mm]akefile(\\.[^/]+)?$/",
        "**/*.go"
      ],
      "matchStrings": [
        "kine_version = (?<currentValue>\\d+(\\.\\d+){2})",
        "\\bkine/blob/v(?<currentValue>\\d+(\\.\\d+){2})"
      ],
      "depNameTemplate": "k3s-io/kine",
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    },
    {
      "customType": "regex",
      "description": "Update Alpine version",
      "managerFilePatterns": [
        "embedded-bins/Makefile.variables"
      ],
      "matchStrings": [
        "alpine_patch_version\\s*=\\s*(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "docker.io/library/alpine",
      "datasourceTemplate": "docker"
    },
    {
      "customType": "regex",
      "description": "Update Python version",
      "managerFilePatterns": [
        "docs/Makefile.variables"
      ],
      "matchStrings": [
        "python_version\\s*=\\s*(?<currentValue>\\S+)"
      ],
      "depNameTemplate": "python",
      "datasourceTemplate": "python-version",
      "versioningTemplate": "python"
    },
    {
      "customType": "regex",
      "description": "Generic version updates for YAML files",
      "managerFilePatterns": [
        "**/*.yaml",
        "**/*.yml"
      ],
      "matchStrings": [
        ":\\s*[\"']?(?<currentValue>\\S+?)[\"']?\\s*#\\s*renovate:\\s*datasource=(?<datasource>\\S+)(\\s+registryUrl=(?<registryUrl>.+))?\\s+depName=(?<depName>\\S+)(\\s+versioning=(?<versioning>.+))?\n"
      ],
      "datasourceTemplate": "{{{datasource}}}",
      "registryUrlTemplate": "{{#if registryUrl}}{{{registryUrl}}}{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ]
}
